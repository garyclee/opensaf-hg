#!/bin/bash
#
#      -*- OpenSAF  -*-
#
# (C) Copyright 2009 The OpenSAF Foundation
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
# under the GNU Lesser General Public License Version 2.1, February 1999.
# The complete license can be accessed from the following location:
# http://opensource.org/licenses/lgpl-license.php
# See the Copying file included with the OpenSAF distribution for full
# licensing terms.
#
# Author(s): Hewlett-Packard Development Company, L.P.
#

#
# plmc_main RC init file for the plmc_d daemon
#

#
# chkconfig info
#
### BEGIN INIT INFO
# Provides:          plmc_d
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
### END INIT INFO
# chkconfig: 2345 99 01
# description: plmc_main starts/stops the plmc_d daemon to enable PLMc operations on an OpenSAF node.
# config: normally found at $sysconfdir/plmcd.conf.
# processname: plmc_d
# pidfile: /var/run/plmc_d.pid
#

###################################################################
# NOTE: This script looks to see if PLMC_CONF_PATH and            #
#       PLMC_DAEMON_BIN_PATH are configured in the                #
#       opensaf/script.conf file.  If not configured, defaults    #
#       are used instead.                                         #
#                                                                 #
###################################################################

PLMC_CONF_PATH=""
PLMC_DAEMON_BIN_PATH=""
PLMC_PID_FILE="/var/run/plmc_d.pid"
RETVAL=0
OPTION=$1

if [ -r "/etc/opensaf/script.conf" ]
then
  . "/etc/opensaf/script.conf"
elif [ -r "/usr/local/etc/opensaf/script.conf" ]
then
  . "/usr/local/etc/opensaf/script.conf"
else
  echo "plmc_main: warning: could not find the opensaf/script.conf file."
fi

if [ "$PLMC_CONF_PATH" = "" ]
then
  echo "plmc_main: warning: PLMC_CONF_PATH is not configured. Using default path: /etc/plmcd.conf"
  PLMC_CONF_PATH=/etc/plmcd.conf
fi
if [ "$PLMC_DAEMON_BIN_PATH" = "" ]
then
  echo "plmc_main: warning: PLMC_DAEMON_BIN_PATH is not configured. Using default path: /usr/sbin"
  PLMC_DAEMON_BIN_PATH=/usr/sbin/plmc_d
fi

print_start_msg()
{
  if [ "$RETVAL" = "0" ]
  then
    echo "Starting plmc_d: [  OK  ]"
  else
    echo "Starting plmc_d: [  FAIL  ]"
  fi
}

print_stop_msg()
{
  if [ "$RETVAL" = "0" ]
  then
    echo "Stopping plmc_d: [  OK  ]"
  else
    echo "Stopping plmc_d: [  FAIL  ]"
  fi
}

print_restart_msg()
{
  if [ "$RETVAL" = "0" ]
  then
    echo "Restarting plmc_d: [  OK  ]"
  else
    echo "Restarting plmc_d: [  FAIL  ]"
  fi
}

check_pid_file()
{
  # First, set a value based on whether the plmc_d daemon is actually running
  pid_file=""
  pid_match=""
  plmc_running=`ps -ef | grep "plmc_d" | grep -v "grep" | awk '{print $2}'`
  if [ -f "$PLMC_PID_FILE" ]; then
    pid_file="`cat $PLMC_PID_FILE`"
    # Match what is in the PLMc pid file with the correct process id
    # that was found with the ps command
    for pid in $plmc_running; do
      if [ "$pid" = "$pid_file" ]; then
        pid_match="$pid"
        break
      fi
    done
  fi

  # Now look to see if the pid file exists
  if [ "$pid_file" != "" ]; then
    # The PLMc pid file exists
    # If plmd_d is running, and the pid file exists,
    # and user is starting plmc_d, then it is a user error
    if [ "$pid_match" != "" ]; then
      if [ "$OPTION" = "start" ]; then
        # User is trying to start plmc_d when it is already running
        echo "plmc_main error: plmc_d is already running!"
        exit 1
      fi
    else
      # The PLMc pid file exists, but the plmc_d is not running,
      # so we have a dangling PLMc pid file - we need to remove it
      rm -f $PLMC_PID_FILE
    fi
  else
    # PID file does not exist
    # If plmc_d is not running, and the user is stopping plmc_d,
    # then it is a user error 
    if [ "$plmc_running" = "" ]; then
      if [ "$OPTION" = "stop" ]; then
        # Trying to stop plmc_d when it is already stopped
        echo "plmc_main error: plmc_d is already stopped!"
        exit 1
      fi
    fi
  fi
}

check_pid_file
case "$1" in
  start)
        $PLMC_DAEMON_BIN_PATH -c $PLMC_CONF_PATH
        RETVAL=$?
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/plmc_main
        print_start_msg
        ;;
  stop)
        $PLMC_DAEMON_BIN_PATH -c $PLMC_CONF_PATH stop
        RETVAL=$?
        [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/plmc_main
        print_stop_msg
        ;;
  restart)
        $PLMC_DAEMON_BIN_PATH -c $PLMC_CONF_PATH restart
        RETVAL=$?
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/plmc_main
        print_restart_msg
        ;;
  status)
        if [ ! -f "/var/run/plmc_d.pid" ]; then
            echo "PLMc is stopped."
        else
            echo "PLMc is running."
        echo ""
        fi
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|status}" >&2
        exit 1
        ;;
esac

exit $RETVAL

