# This file contains configuration for the SAF IMM service
# See the file osaf/services/saf/immsv/README for more configuration options.

# Uncomment the next line if you want to run immd through valgrind
#export IMMDTOOL="valgrind --leak-check=full --log-file=/tmp/immd.valgrind"

# Uncomment the next line to enable trace
#args="--tracemask=0xffffffff"

# Healthcheck keys
export IMMSV_ENV_HEALTHCHECK_KEY="Default"

# If the PBE is to execute in redundant mode, that is 2 PBEs running in paralell
# at SCs and writing to separate files/filesystems, then at load time the first
# (i.e. active) IMMD needs to know how long it must wait for the peer SC/IMMD
# to join. Only when both SCs have joined can it be determined if the two
# PBE files are in sync and if not, which side has the latest data.
# The side with the latest (most up to date) data is chosen for loading by
# designating the IMMND at that SC as the coordinator. The IMMND coordinator
# performs the loading as usual.
# If IMMSV_2PBE_PEER_SC_MAX_WAIT expires, then loading will proceed with only
# one SC/PBE, with a risk that the IMM persistent state is actually re-wound. 
# Note: The same risk exists also with regular single PBE on top of a shared
# redundant file system. It is then instead the redundancy at the shared file
# system level (e.g. drbd) where the corresponding wait and possible re-wind
# can happen. Timeout is in units of seconds.
#export IMMSV_2PBE_PEER_SC_MAX_WAIT=30


# Uncomment the next line to enable info level logging
#args="--loglevel=info"
