DESCRIPTION OF ONGOING ENHANCEMENT
----------------------------------

See ticket #9 and #124. The main problem to solve ist to prevent the log service to "hang",
including e.g. not beeing able to handle health check etc. when the communication with a
NFS file system is broken.

This is not done by creating a thread for each stream and asynch IO is not used either, as
suggested in #9.
This enhancement creates a second thread and functions or parts of functions  using file IO
are moved to this thread.

The enhancement is done i three steps:
1.  Create a mechanism that can handle functions with in and out parameters and that times out
    if such a function does not return "hangs". See lgs_file.c

2.  Use 1. to handle already existing complete functions or parts of functions that has any type
    of interaction with the file system. This is done without changing any of the existing structure
    of the log service. Affected functions remains "as is" with the same in and out parameters as before,
    but internally all or some of the code is moved to a "handler" that is running in the second thread.
    The original function will now return with error instead of "hang" if an operation including file IO
    "hangs". See lgs_filehdl.c, lgs_stream.c and lgs_util.c

3.  Handle new error situations that may occur. Log streams can now be created and opened even if the
    corresponding files cannot be handled. If a stream is opened without creating files an attempt to
    create the files is done when a client tries to write a log record.
    In this version the callback function will report "TRY AGAIN" if the logserver fails to write the
    log record. This is the same behaviour as before, the only difference is that i may happen also if
    there is communication problems with the file system.

TODO
----

Handling of streams via IMM objects has to be improved. E.g. Some admin operations must be rejected if
the filsystem is not available e.g. creating a new stream with a configuration object.

NOTES
-----

In file lgs_file.c function file_hndl_thread(..) there is a define LLD_DELAY_TST
If this define is set a delay is set making the file IO thread "hang" for a defined time.
In order to test the log service in a "normal" way the define must be commented out.