/*      -*- OpenSAF  -*-
 *
 * (C) Copyright 2008 The OpenSAF Foundation
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
 * under the GNU Lesser General Public License Version 2.1, February 1999.
 * The complete license can be accessed from the following location:
 * http://opensource.org/licenses/lgpl-license.php
 * See the Copying file included with the OpenSAF distribution for full
 * licensing terms.
 *
 * Author(s): Emerson Network Power
 *
 */

/*****************************************************************************
..............................................................................

  
  .....................................................................  
  
  DESCRIPTION: This file describes the Logging Header Strings etc...,
  
*****************************************************************************/ 
#ifndef SUBAGT_LOG_H
#define SUBAGT_LOG_H

#include "ncs_log.h"
#include "dta_papi.h"

typedef enum snmpsubagt_hdln_enum
{
    SNMPSUBAGT_CB_NULL, 
    SNMPSUBAGT_ARG_NULL, 
    SNMPSUBAGT_CB_CREATE_SUCCESS, 
    SNMPSUBAGT_DESTROY_SUCCESS, 
    SNMPSUBAGT_CB_SET_NULL, 
    SNMPSUBAGT_AMF_CB_NULL, 
    SNMPSUBAGT_AMF_STATE_CHNGE_SUCCESS, 
    NETSNMP_DS_SET_BOOLEAN, 
    INIT_SNMP_DONE, 
    INIT_AGENT_DONE, 
    SNMP_SHUTDOWN_DONE, 
    SNMPSUBAGT_AMF_FD_CLR, 
    SNMPSUBAGT_EDA_FD_CLR, 
    SNMPSUBAGT_RUN_ALARMS, 
    SNMPSUBAGT_OID_LEN_NULL, 
    SNMPSUBAGT_OID_BASE_NULL, 
    SNMPSUBAGT_MEM_ALLOC_PAT_NODE_FAIL, 
    SNMPSUBAGT_OID_DB_NODE_NULL, 
    SNMPSUBAGT_OID_DB_NODE_DEL_FAIL, 
    SNMPSUBAGT_OID_DB_NULL,
    SNMPSUBAGT_ALARM_UNREG_DONE,
    SNMPSUBAGT_CLOSE_SESSIONS_DONE,
    SNMPSUBAGT_THREAD_EXIT_BEING_INVOKED,
    SNMPSUBAGT_EVT_DATA_NULL,
    SNMPSUBAGT_DONOT_INFORM_TRAP,
    SNMPSUBAGT_TRAP_VARBIND_NULL,
    SNMPSUBAGT_TRAP_VAR_ELEM_NULL,
    SNMPSUBAGT_MIB_PARAM_VAL_NULL, 
    SNMPSUBAGT_OBJ_DETAILS_NULL,
    SNMPSUBAGT_MBX_REG_DEREG_NULL,
    SNMPSUBAGT_LOCK_TAKEN,
    SNMPSUBAGT_LOCK_RELEASED,
    SNMPSUBAGT_AMF_HLTH_CHECK_STARTED,
    SNMPSUBAGT_AMF_HLTH_CHECK_STOPPED,
    SNMPSUBAGT_AMF_HLTH_CHECK_STARTED_ALREADY,
    SNMPSUBAGT_AGT_MONITORING_STARTED,
    SNMPSUBAGT_AGT_RESTART_THRSLD_CROSSED,
    SNMPSUBAGT_AGT_RESTART,
    SNMPSUBAGT_AGT_MONITOR_FAILED,
    SNMPSUBAGT_AGT_NOT_MONITORED,
    SNMPSUBAGT_AGT_MONITORED,
    SNMPSUBAGT_JUMP_TO_NEXT_COLUMN,
    SNMPSUBAGT_HLDN_MAX
}SNMPSUBAGT_HDLN_ENUM;

typedef enum snmpsubagt_log_intf_init_state_enum
{
    SNMPSUBAGT_AMF_INIT_SUCCESS,
    SNMPSUBAGT_EDA_INIT_SUCCESS,
    SNMPSUBAGT_DTA_INIT_SUCCESS,
    SNMPSUBAGT_AGENT_INIT_SUCCESS,
    SNMPSUBAGT_MAC_INIT_SUCCESS,
    SNMPSUBAGT_INIT_SUCCESS,
    SNMPSUBAGT_AMF_FINALIZE_SUCCESS,
    SNMPSUBAGT_EDA_FINALIZE_SUCCESS,
    SNMPSUBAGT_DTA_FINALIZE_SUCCESS,
    SNMPSUBAGT_AGENT_FINALIZE_SUCCESS,
    SNMPSUBAGT_MAC_FINALIZE_SUCCESS,
    SNMPSUBAGT_AMF_INIT_RETRY,
    SNMPSUBAGT_AMF_COMP_REG_RETRY,
    SNMPSUBAGT_AMF_COMP_REG_COMPLETED,
    SNMPSUBAGT_EDA_INIT_RETRY,
    SNMPSUBAGT_EDA_SUBSCRIBE_SUCCESS,
    SNMPSUBAGT_EDA_UNSUBSCRIBE_SUCCESS,
    SNMPSUBAGT_PROCESSING_SIGHUP,
    SNMPSUBAGT_PROCESSING_SIGUSR2,
    SNMPSUBAGT_LOG_INTF_INIT_STATE_MAX
}SNMPSUBAGT_LOG_INTF_INIT_STATE_ENUM;

typedef enum subagt_log_func_entry_enum
{
    SNMPSUBAGT_FUNC_ENTRY_SUBAGT_START, /* 1 */
    SNMPSUBAGT_FUNC_ENTRY_SVCS_INIT,
    SNMPSUBAGT_FUNC_ENTRY_CB_FINALISE, 
    SNMPSUBAGT_FUNC_ENTRY_CB_UPDATE, 
    SNMPSUBAGT_FUNC_ENTRY_DESTROY, 
    SNMPSUBAGT_FUNC_ENTRY_SUBAGT_DESTROY,
    SNMPSUBAGT_FUNC_ENTRY_CLEANUP, 
    SNMPSUBAGT_FUNC_ENTRY_AMF_INIT, 
    SNMPSUBAGT_FUNC_ENTRY_AMF_FINALIZE, 
    SNMPSUBAGT_FUNC_ENTRY_AMF_CB_INIT,/* 10 */ 
    SNMPSUBAGT_FUNC_ENTRY_AMF_HLTH_CHK_CB, 
    SNMPSUBAGT_FUNC_ENTRY_CSISET_CB, 
    SNMPSUBAGT_FUNC_ENTRY_INVALID_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_ACTIVE_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_STANDBY_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_QTOQ_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_QUIESCED_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_QUIESCING_STATE_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_AMF_TERMNAT_CB, 
    SNMPSUBAGT_FUNC_ENTRY_AMF_CSIRMV_CB, /* 20 */
    SNMPSUBAGT_FUNC_ENTRY_NETSNMP_LIB_INIT, 
    SNMPSUBAGT_FUNC_ENTRY_NETSNMP_LIB_FINALIZE,
    SNMPSUBAGT_FUNC_ENTRY_NETSNMP_LIB_DEINIT, 
    SNMPSUBAGT_FUNC_ENTRY_RQST_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_TABLE_OID_ADD, 
    SNMPSUBAGT_FUNC_ENTRY_TABLE_OID_DEL, 
    SNMPSUBAGT_FUNC_ENTRY_TABLE_OID_DESTROY,  
    SNMPSUBAGT_FUNC_ENTRY_MBX_PROCESS,
    SNMPSUBAGT_FUNC_ENTRY_MBX_DESTROY_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_MBX_INIT_DEINIT_PROCESS, /* 30 */
    SNMPSUBAGT_FUNC_ENTRY_MAB_MAC_MSG_SEND,
    SNMPSUBAGT_FUNC_ENTRY_EDA_INIT,
    SNMPSUBAGT_FUNC_ENTRY_EDA_FINALIZE,
    SNMPSUBAGT_FUNC_ENTRY_EDA_CB,
    SNMPSUBAGT_FUNC_ENTRY_TE_TO_AX,
    SNMPSUBAGT_FUNC_ENTRY_SEND_V2_TRAP,
    SNMPSUBAGT_VAR_BIND_COMPOSE, 
    SNMPSUBAGT_FUNC_ENTRY_EDA_OBJ_GET,
    SNMPSUBAGT_FUNC_ENTRY_EDA_TRAP_VB_FREE, 
    SNMPSUBAGT_FUNC_ENTRY_EDA_VB_FREE,  /* 40 */
    SNMPSUBAGT_FUNC_ENTRY_EDA_VB_LIST_APPEND,
    SNMPSUBAGT_FUNC_ENTRY_EDA_TRAP_VB_POP,
    SNMPSUBAGT_FUNC_ENTRY_EDA_FULL_OID_POP,
    SNMPSUBAGT_FUNC_ENTRY_SNMP_TRAPID_VB_POP,
    SNMPSUBAGT_FUNC_INIT_DEINIT_MSG_POST,
    SNMPSUBAGT_FUNC_ENTRY_MAC_INITIALIZE,
    SNMPSUBAGT_FUNC_ENTRY_MAC_FINALIZE,
    SNMPSUBAGT_FUNC_ENTRY_HLTH_CHECK_START_POST,
    SNMPSUBAGT_FUNC_ENTRY_MBX_HEALTHCHECK_START, 
    SNMPSUBAGT_FUNC_ENTRY_APPL_MIBS_REG,/* 50 */
    SNMPSUBAGT_FUNC_ENTRY_SPA_JOB,
    SNMPSUBAGT_FUNC_ENTRY_PENDING_LST_CMP,
    SNMPSUBAGT_FUNC_ENTRY_PENDING_REGS_FREE,
    SNMPSUBAGT_FUNC_ENTRY_PEND_REGS_PROC,
    SNMPSUBAGT_FUNC_ENTRY_PEND_LIST_FREE, 
    SNMPSUBAGT_FUNC_ENTRY_PING_INT_CONF, 
    SNMPSUBAGT_FUNC_ENTRY_PARAM_FILL, 
    SNMPSUBAGT_FUNC_ENTRY_PARAM_TYPE_GET, 
    SNMPSUBAGT_FUNC_ENTRY_INDEX_EXTRACT, 
    SNMPSUBAGT_FUNC_ENTRY_OID_COMPOSE, /* 60 */ 
    SNMPSUBAGT_FUNC_ENTRY_RESP_PROCESS, 
    SNMPSUBAGT_FUNC_ENTRY_ERROR_CODE_MAP, 
    SNMPSUBAGT_FUNC_ENTRY_UNREGISTER_MIB,
    SNMPSUBAGT_FUNC_ENTRY_APPL_MIBS_UNREG,
    SNMPSUBAGT_FUNC_ENTRY_AGT_MONITOR_KICKOFF,
    SNMPSUBAGT_FUNC_ENTRY_AGT_MONITOR,
    SNMPSUBAGT_FUNC_ENTRY_AGT_PING, 
    SNMPSUBAGT_FUNC_ENTRY_AGT_MONITOR_STOP,/* 68 */
    SNMPSUBAGT_FUNC_ENTRY_AMF_COMPONENTIZE,
    SNMPSUBAGT_FUNC_ENTRY_ACTIVE_ACTIVE_PROCESS,
    SNMPSUBAGT_FUNC_ENTRY_SIGUSR1_SIGNAL,
    SNMPSUBAGT_FUNC_ENTRY_RDA_INIT_ROLE_GET,
    SNMPSUBAGT_FUNC_ENTRY_MAX
}SUBAGT_LOG_FUNC_ENTRY_ENUM;

typedef enum snmpsubagt_memfail_enum
{
    SNMPSUBAGT_MEM_ALLOC, 
    SNMPSUBAGT_MEM_FREE, 
    SNMPSUBAGT_MEM_FAIL,
    SNMPSUBAGT_EDA_VARBINDS_FREE_FAIL,
    SNMPSUBAGT_EDA_TRAP_VARBINDS_FREE_FAIL,
    SNMPSUBAGT_VAR_BIND_ALLOC_FAIL,
    SNMPSUBAGT_OID_ALLOC_FAIL, 
    SNMPSUBAGT_VAR_BIND_NAME_ALLOC_FAIL,
    SNMPSUBAGT_PEND_REG_NODE_ALLOC_FAILED,
    SNMPSUBAGT_MEMFAIL_MAX
}SNMPSUBAGT_MEMFAIL_ENUM;

typedef enum snmpsubagt_log_state_enum
{
    SNMPSUBAGT_HA_STATE_CHNGE, 
    SNMPSUBAGT_HA_STATE_CHNGE_INVALID, 
    SNMPSUBAGT_HA_STATE_INVALID, 
    SNMPSUBAGT_HA_STATE_LOG_MAX
}SNMPSUBAGT_LOG_STATE_ENUM;

typedef enum snmpsubagt_log_errors_enum
{
    SNMPSUBAGT_NO_MBX, 
    SNMPSUBAGT_AGT_INIT_FAILED, 
    SNMPSUBAGT_MAC_INIT_FAILED, 
    SNMPSUBAGT_INVALID_INPUT, 
    SNMPSUBAGT_AMF_INIT_FAILED, 
    SNMPSUBAGT_EDA_INIT_FAILED, 
    SNMPSUBAGT_EDA_REGISTER_FAILED, 
    SNMPSUBAGT_EDA_DSPATCH_ERR,
    SNMPSUBAGT_RQST_PROCESS_FAILED, 
    SNMPSUBAGT_FATAL_ERROR,/* 10 */ 
    SNMPSUBAGT_NETSNMP_LIB_FINALIZE_FAILED, 
    SNMPSUBAGT_EDA_FINALIZE_FAILED, 
    SNMPSUBAGT_MAC_FINALIZE_FAILED, 
    SNMPSUBAGT_CB_FINALIZE_FAILED, 
    SNMPSUBAGT_DTA_FINALIZE_FAILED, 
    SNMPSUBAGT_DESTROY_FAILED, 
    SNMPSUBAGT_AMF_CALLBACKS_INIT_FAILED, 
    SNMPSUBAGT_AMF_COMP_NAME_GET_FAILED, 
    SNMPSUBAGT_AMF_COMP_REG_FAILED, 
    SNMPSUBAGT_AMF_SEL_OBJ_GET_FAILED, 
    SNMPSUBAGT_AMF_DSPATCH_ERR,/* 20 */ 
    SNMPSUBAGT_AMF_HLTH_CHK_STRT_FAILED, 
    SNMPSUBAGT_AMF_HLTH_CHK_STOP_FAILED, 
    SNMPSUBAGT_AMF_STOP_FAILED, 
    SNMPSUBAGT_AMF_COMP_UNREG_FAILED, 
    SNMPSUBAGT_AMF_FINALIZE_FAILED, 
    SNMPSUBAGT_STATE_CHNGE_FAILED, 
    SNMPSUBAGT_NETSNMP_LIB_DEINIT_FAILED, 
    SNMPSUBAGT_NETSNMP_LIB_INIT_FAILED, 
    SNMPSUBAGT_OID_DB_NODE_MALLOC_FAIL, 
    SNMPSUBAGT_MBX_MSG_MALLOC_FAIL,/* 30 */
    SNMPSUBAGT_EVT_CHNL_OPEN_FAIL,
    SNMPSUBAGT_EDA_EVT_SUBSCRIBE_FAIL,
    SNMPSUBAGT_EDA_SEL_OBJ_GET_FAILED,
    SNMPSUBAGT_EVT_INIT_FAIL,
    SNMPSUBAGT_EVT_UNSUBSCRIBE_FAIL,
    SNMPSUBAGT_EVT_CHNL_CLOSE_FAIL,
    SNMPSUBAGT_EDA_EVT_DATA_GET_FAIL,
    SNMPSUBAGT_EVT_SUBSCRIP_MISMATCH,
    SNMPSUBAGT_EVT_ATTR_GET_FAIL, 
    SNMPSUBAGT_EVT_FREE_FAIL,
    SNMPSUBAGT_TE_AGENTXTRAP_FAILED,/* 40 */
    SNMPSUBAGT_TRAP_DECODE_FAIL, 
    SNMPSUBAGT_TRAP_SEND_FAIL,
    SNMPSUBAGT_TRAPID_VB_POP_FAIL,
    SNMPSUBAGT_VAR_BIND_APPEND_FAIL,
    SNMPSUBAGT_TRAP_VARBIND_LIST_APPEND_FAIL,
    SNMPSUBAGT_EDA_OBJ_GET_FAIL,
    SNMPSUBAGT_MBX_DESTROY_FAILED, 
    SNMPSUBAGT_MBX_REG_DEREG_FAILED, 
    SNMPSUBAGT_MBX_INVALID_MSG,  
    SNMPSUBAGT_MBX_IPC_SEND_FAILED,/* 50 */
    SNMPSUBAGT_CB_LOCK_FAILED,
    SNMPSUBAGT_CB_UNLOCK_FAILED,
    SNMPSUBAGT_MBX_HLTH_CHECK_START_FAILED,
    SNMPSUBAGT_HLTHCHECK_POST_FAILED,
    SNMPSUBAGT_PEND_REG_DLIST_ADD_FAILED,
    SNMPSUBAGT_PEND_REG_PROCESS_FAILED,
    SNMPSUBAGT_PEND_DEL_FAILED,
    SNMPSUBAGT_AGT_MONITOR_TASK_CREATE_FAILED,
    SNMPSUBAGT_AGT_MONITOR_TASK_START_FAILED,
    SNMPSUBAGT_AGT_MONITOR_OPEN_FAILED, /* 60 */
    SNMPSUBAGT_AGT_MONITOR_STOP_FAILED, 
    SNMPSUBAGT_AGT_MONITOR_AMF_REPORT_FAILED, 
    SNMPSUBAGT_AGT_MONITOR_FLAG_INVALID, 
    SNMPSUBAGT_AGT_MONITOR_INTERVAL_INVALID,
    SNMPSUBAGT_AGT_MONITOR_MAX_TIMEOUT_INVALID, 
    SNMPSUBAGT_AGT_MONITOR_MAX_RETRIES_INVALID,
    SNMPSUBAGT_TMR_FAIL,
    SNMPSUBAGT_MIB_REGISTER_FAIL,
    SNMPSUBAGT_PENDING_REGISTER_FAIL,
    SNMPSUBAGT_RDA_INIT_ROLE_GET_FAILED, 
    PCS_RDA_REQUEST_FAIL, 
    SNMPSUBAGT_TIME_TO_WAIT_DISCREPANCY, 
    SNMPSUBAGT_ERRORS_MAX 
}SNMPSUBAGT_LOG_ERRORS_ENUM;

typedef enum snmpsubagt_log_error_strs_enum
{
    SNMPSUBAGT_DLIB_LOAD_NULL_FAILED, 
    SNMPSUBAGT_DLIB_SYM_FAILED,
    SNMPSUBAGT_REG_DEREG_FAILED,
    SNMPSUBAGT_REG_DEREG_SUCCESS,
    SNMPSUBAGT_PENDING_REG,
    SNMPSUBAGT_REG_COMPLETED,
    SNMPSUBAGT_SUBSYS_REG_FAILED,
    SNMPSUBAGT_SUBSYS_UNREG_FAILED,
    SNMPSUBAGT_AGT_MONITOR_NO_RSTRT_SCP, 
    SNMPSUBAGT_AGT_MONITOR_RSTRT_SCP_LARGE, 
    SNMPSUBAGT_AGT_MONITOR_RSTRT_SCP_PERMISSIONS, 
    SNMPSUBAGT_ERROR_STRS_MAX
}SNMPSUBAGT_LOG_ERROR_STRS_ENUM;

typedef enum snmpsubagt_log_data_dump_enum
{
    SNMPSUBAGT_AMF_SEL_OBJ, 
    SNMPSUBAGT_EDA_SEL_OBJ, 
    SNMPSUBAGT_IPC_MBX_SEL_OBJ, 
    SNMPSUBAGT_NUM_FDS, 
    SNMPSUBAGT_AMF_FD_ISSET, 
    SNMPSUBAGT_NETSNMP_FD_ISSET, 
    SNMPSUBAGT_EDA_FD_ISSET, 
    SNMPSUBAGT_IPC_MBX_FD_ISSET,
    SNMPSUBAGT_SPL_FD_PROCESS, 
    SNMPSUBAGT_AGT_TOUT_THRSLD, 
    SNMPSUBAGT_AGT_RESTART_THRSLD, 
    SNMPSUBAGT_LOG_DATA_DUMP_MAX 
}SNMPSUBAGT_LOG_DATA_DUMP_ENUM;

typedef enum snmpsubagt_log_memdump_enum
{ 
  SNMPSUBAGT_NCSMIB_ARG_TBL_DUMP,
  SNMPSUBAGT_NCSTRAP_DUMP,
  SNMPSUBAGT_NCSMIB_ARG_INSTID_DUMP,
  SNMPSUBAGT_NCSMIB_ARG_PARAM_INFO_DUMP,
  SNMPSUBAGT_NCSMIB_ARG_INT_INFO_DUMP,
  SNMPSUBAGT_NCSMIB_ARG_OCT_INFO_DUMP,
  SNMPSUBAGT_NCSTRAP_TBL_DUMP,
  SNMPSUBAGT_NCSTRAP_VB_TBL_DUMP,
  SNMPSUBAGT_LOG_MEMDUMP_MAX 
} SNMPSUBAGT_LOG_MEMDUMP_ENUM;

typedef enum snmpsubagt_log_table_id
{
    SNMPSUBAGT_NODE_ADDED_IN_OID_DB, 
    SNMPSUBAGT_NODE_DEL_FROM_OID_DB, 
    SNMPSUBAGT_LOG_TABLE_ID_MAX
}SNMPSUBAGT_LOG_TABLE_ID_ENUM;

typedef enum snmpsubagt_log_str_set
{
    SNMPSUBAGT_FS_HDLN,
    SNMPSUBAGT_FS_FUNC_ENTRY,
    SNMPSUBAGT_FS_MEM,
    SNMPSUBAGT_FS_DATA_DUMP,
    SNMPSUBAGT_FS_STATE,
    SNMPSUBAGT_FS_ERRORS,
    SNMPSUBAGT_FS_MEMDUMP,
    SNMPSUBAGT_FS_ERROR_STRS,
    SNMPSUBAGT_FS_GEN_STR, 
    SNMPSUBAGT_FS_GEN_ERR, 
    SNMPSUBAGT_FS_GEN_OID_LOG,
    SNMPSUBAGT_FS_INTF_INIT_STATE,
    SNMPSUBAGT_FS_LOG_TABLE_ID,
    SNMPSUBAGT_FS_MAX
}SNMPSUBAGT_LOG_STR_SET;

typedef enum snmpsubagt_fmat_enum
{
    SNMPSUBAGT_FMTID_HDLN, 
    SNMPSUBAGT_FMTID_FUNC_ENTRY, 
    SNMPSUBAGT_FMTID_MEM, 
    SNMPSUBAGT_FMTID_DATA_DUMP, 
    SNMPSUBAGT_FMTID_STATE, 
    SNMPSUBAGT_FMTID_ERRORS, 
    SNMPSUBAGT_FMTID_MEMDUMP, 
    SNMPSUBAGT_FMTID_ERROR_STRS, 
    SNMPSUBAGT_FMTID_GEN_STR, 
    SNMPSUBAGT_FMTID_GEN_ERR, 
    SNMPSUBAGT_FMTID_GEN_OID_LOG,
    SNMPSUBAGT_FMTID_INTF_INIT_STATE,
    SNMPSUBAGT_FMTID_LOG_TABLE_ID,
    SNMPSUBAGT_FMTID_MAX
}SNMPSUBAGT_FMAT_ENUM;

/* Macro Mappings */
#define m_SNMPSUBAGT_HEADLINE_LOG(error)  \
            snmpsubagt_log_headline(error)
            
#define m_SNMPSUBAGT_MEM_FAIL_LOG(error)  \
            snmpsubagt_log_mem(error)

#define m_SNMPSUBAGT_ERROR_LOG(index, info1, info2, info3) \
            snmpsubagt_log_errors(index, info1, info2, info3) 

#define m_SNMPSUBAGT_ERROR_STR_LOG(index, info1, info2, info3) \
            snmpsubagt_log_error_strs(index, info1, info2, info3) 

#define m_SNMPSUBAGT_FUNC_ENTRY_LOG(func_name)\
            snmpsubagt_log_func_entry(func_name)
            
#define m_SNMPSUBAGT_DATA_LOG(index, info1)\
            snmpsubagt_log_data_dump(index, info1)

#define m_SNMPSUBAGT_STATE_LOG(index, info1, info2)\
            snmpsubagt_log_state(index, info1,info2)
            
#define m_SNMPSUBAGT_MEMDUMP_LOG(index, info)\
            snmpsubagt_log_memdump(index, info); 

#define m_SNMPSUBAGT_INTF_INIT_STATE_LOG(error)  \
            snmpsubagt_log_intf_init_state(error)

#define m_SNMPSUBAGT_TABLE_ID_LOG(index, tblid)\
            snmpsubagt_log_table_id(index, tblid)
            
#define m_NCS_SNMPSUBAGT_DBG_SINK(r) \
        snmpsubagt_dbg_sink(__LINE__, __FILE__, (uns32)r)

/******************************************************************
* Logging Routines 
******************************************************************/
EXTERN_C uns32 
snmpsubagt_dla_initialize(NCS_SERVICE_ID i_svc_id);

EXTERN_C uns32
snmpsubagt_dla_finalize(NCS_SERVICE_ID i_svc_id);

EXTERN_C void 
snmpsubagt_log_headline(uns8);

EXTERN_C void 
snmpsubagt_log_mem(uns8);

EXTERN_C void 
snmpsubagt_log_errors(uns8, uns32, uns32, uns32);

EXTERN_C void 
snmpsubagt_log_error_strs(uns8, char *, uns32, uns32);
 
EXTERN_C void 
snmpsubagt_log_func_entry(uns8);

EXTERN_C void 
snmpsubagt_log_data_dump(uns8, uns32);

EXTERN_C void
snmpsubagt_log_state(uns8, uns32, uns32);



EXTERN_C void
snmpsubagt_log_memdump(uns8 id, NCSFL_MEM mem);

EXTERN_C void 
snmpsubagt_log_intf_init_state(uns8);

EXTERN_C void 
snmpsubagt_log_table_id(uns8, uns32);

EXTERN_C LEAPDLL_API 
uns32 snmpsubagt_dbg_sink(uns32,char*,uns32);

EXTERN_C uns32
snmpsubagt_canned_str_reg(NCS_SERVICE_ID i_svc_id); 

EXTERN_C uns32
snmpsubagt_canned_str_dereg(NCS_SERVICE_ID i_svc_id);


/* routines used in generating the logging in generated code */
void
snmpsubagt_gen_str_log(char*);

void
snmpsubagt_gen_err_log(char*, uns32);

void
snmpsubagt_gen_oid_log(NCSFL_MEM);

/* DTSv version support */
#define SNMPSUBAGT_LOG_VERSION 2


#endif



