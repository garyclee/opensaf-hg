#!/usr/bin/env python

import select
import argparse

from pyosaf.saAis import eSaAisErrorT

from pyosaf.utils import immom
from pyosaf.utils.immoi.implementer import Implementer, AdminOperation
from pyosaf.utils.immom.object import ImmObject
from pyosaf.utils.immom.ccb import Ccb

class_name = "PingPong"
dn         = "pingPongId=1"

class PingPong(Implementer):

    def __init__(self):
        Implementer.__init__(self, class_names=[class_name])

    @AdminOperation(class_name, 0)
    def ping(self, dn, arguments):
        print
        print
        print "Pong!"
        print

        self.print_admin_operation_info(dn, arguments)

    @AdminOperation(class_name, 1)
    def pong(self, dn, arguments):
        print 
        print
        print "Ping!"
        print

        self.print_admin_operation_info(dn, arguments)

    def print_admin_operation_info(self, dn, arguments):
        print "INFO: I am %s" % dn

        if arguments:
            print "INFO: Received arguments"

            for argument in arguments:
                print " - %s: %s (%s)" % \
                    (argument.name, argument.value, argument.type)

if __name__ == '__main__':

    # Parse command line arguments
    parser = argparse.ArgumentParser(
        description='Logs and replies to admin operations 0 and 1 towards %s,'
        ' and replies' % dn)

    parser.parse_args()

    # Create the ping-pong instance if it doesn't exist
    if not immom.get(dn):

        with Ccb(flags=None) as ccb:
            obj = ImmObject(class_name=class_name, dn=dn)

            obj.pingPongId  = "pingPongId=1"

            ccb.create(obj)

    # Create the implementer instance
    implementer = PingPong()

    # Start dispatch and time update loop
    implementer.enter_dispatch_loop()
