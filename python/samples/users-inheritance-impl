#!/usr/bin/env python

from pyosaf import saAis
from pyosaf.utils import immom, immoi, SafException
from pyosaf.utils.immom.object import ImmObject
from pyosaf.utils.immoi.implementer import Implementer

import psutil
import argparse

class_name='UsersSampleClass'

class UsersImplementer(Implementer):

    def __init__(self):
        Implementer.__init__(self, name='UsersImplementer')

    def on_runtime_values_get(self, name, class_name, attribute):
        return list(set(map(lambda x: x.name, psutil.users())))

if __name__ == '__main__':

    # Parse command line arguments
    parser = argparse.ArgumentParser(
        description='''Creates the usersId=1 object and updates its users
attribute with the current list of logged in users when it is read
in IMM.

Use like this:

$ users-inheritance-impl &

$ immlist usersId=1
''', formatter_class=argparse.RawTextHelpFormatter)

    parser.parse_args()

    users_implementer = UsersImplementer()

    try:
        obj = ImmObject(class_name=class_name, dn='usersId=1')

        obj.usersId = 'usersId=1'

        users_implementer.create(obj)
    except SafException as err:
        if not err.value == saAis.eSaAisErrorT.SA_AIS_ERR_EXIST:
            raise err
        
    users_implementer.enter_dispatch_loop()
