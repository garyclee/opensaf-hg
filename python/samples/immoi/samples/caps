#!/usr/bin/env python

import itertools

from pyosaf.saAis import eSaAisErrorT

from pyosaf.utils import SafException

from pyosaf.utils.immoi.implementer import Implementer

caps_class_name = "CapsSample"

def handle_validate(all_instances, updated, created, deleted):

    # Verify that upper and lower caps are correct in created objects
    # and updated objects
    for mo in itertools.chain(created, updated):

        # Verify upper caps
        if mo.upperCaps and not mo.upperCaps.isupper():
            err_str = "ERROR: %s.upperCaps must be upper case (was %s)" % \
                (mo.dn, mo.upperCaps)
            raise SafException(eSaAisErrorT.SA_AIS_ERR_INVALID_PARAM, err_str)

        # Verify lower caps
        if mo.lowerCaps and not mo.lowerCaps.islower():
            err_str = "ERROR: %s.lowerCaps must be lower case (was %s)" % \
                      (mo.dn, mo.lowerCaps)
            raise SafException(eSaAisErrorT.SA_AIS_ERR_INVALID_PARAM, err_str)


if __name__ == "__main__":

    # Create the implementer
    classes = [caps_class_name]

    caps_implementer = Implementer(on_validate=handle_validate, 
                                   class_names=classes,
                                   name="CapsImplementer")

    # Start the infinite dispatch loop
    caps_implementer.enter_dispatch_loop()
