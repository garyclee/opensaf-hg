#!/usr/bin/env python

from pyosaf.utils.immoi import implementer

import argparse

tone_class_names = ["Do", "Re", "Mi", "Fa", "So", "La", "Ti"]

        
if __name__ == "__main__":

    # Parse command line arguments
    parser = argparse.ArgumentParser(
        description=('''Ensures that instances of %s can only be created in this '
                     'order.

Use like this:

$ tones &

$ immcfg -c Do doId=1                 (allowed)

$ immcfg -c Re reId=1,doId=1          (allowed)

$ immcfg -c Do doId=1,reId=1,doId=1   (not allowed)

$ immcfg -c Mi miId=1                 (not allowed)
''') % ', '.join(tone_class_names), formatter_class=argparse.RawTextHelpFormatter)

    args = parser.parse_args()

    # Set up containment constraints
    constraints = implementer.Constraints()

    constraints.add_allowed_containment('Do', 'Re', upper=1)
    constraints.add_allowed_containment('Re', 'Mi', upper=1)
    constraints.add_allowed_containment('Mi', 'Fa', upper=1)
    constraints.add_allowed_containment('Fa', 'So', upper=1)
    constraints.add_allowed_containment('So', 'La', upper=1)
    constraints.add_allowed_containment('La', 'Ti', upper=1)

    # Create the implementer
    tones_implementer = implementer.Implementer(class_names=tone_class_names,
                                                name="TonesImplementer")

    tones_implementer.set_constraints(constraints)

    # Start the infinite dispatch loop
    tones_implementer.enter_dispatch_loop()
