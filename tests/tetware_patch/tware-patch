diff -Naur inc/tet3/tet_api.h inc/tet3/tet_api.h
--- inc/tet3/tet_api.h	2006-03-10 15:12:15.000000000 +0530
+++ inc/tet3/tet_api.h	2007-09-28 15:44:08.000000000 +0530
@@ -432,8 +432,11 @@
 struct tet_testlist {
 	void (*testfunc)();
 	int icref;
+        int argc;
 };
 extern struct tet_testlist tet_testlist[];
+extern struct tet_testlist *ptr_testlist;
+extern int test_start_flag;
 
 /* OR all of these test case interface functions */
 extern int tet_getmaxic TET_PROTOLIST((void));
@@ -442,6 +445,8 @@
 extern int tet_gettpcount TET_PROTOLIST((int));
 extern int tet_invoketp TET_PROTOLIST((int, int));
 extern int tet_isdefic TET_PROTOLIST((int));
+extern void tet_test_start TET_PROTOLIST((int,struct tet_testlist a[]));
+extern void tet_test_cleanup TET_PROTOLIST((void));
 
 
 /*
diff -Naur tet/src/tet3/apilib/dresfile.c src/tet3/apilib/dresfile.c
--- src/tet3/apilib/dresfile.c	2006-03-10 15:12:16.000000000 +0530
+++ src/tet3/apilib/dresfile.c	2007-09-28 15:53:32.000000000 +0530
@@ -902,6 +902,7 @@
 
 	tet_check_api_status(TET_CHECK_API_INITIALISED);
 
+#if 0
 	if (tet_thistest == 0)
 	{
 		(void) sprintf(errmsg,
@@ -910,6 +911,7 @@
 		tet_error(0, errmsg);
 		return;
 	}
+#endif
 
 	API_LOCK;
 
diff -Naur src/tet3/apilib/tciface.c src/tet3/apilib/tciface.c
--- src/tet3/apilib/tciface.c	2006-03-10 15:12:16.000000000 +0530
+++ src/tet3/apilib/tciface.c	2007-09-28 15:51:13.000000000 +0530
@@ -106,6 +106,8 @@
 #include "dtmac.h"
 #include "tet_api.h"
 
+extern int test_start_flag;
+extern struct tet_testlist *ptr_testlist;
 
 /*
 **	tet_getmaxic(), tet_getminic() - return the highest and lowest
@@ -117,8 +119,13 @@
 	register struct tet_testlist *tp;
 	register int icmax;
 
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
 	icmax = 0;
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++)
+	for (; tp->testfunc != TET_NULLFP; tp++)
 		if (tp->icref > icmax)
 			icmax = tp->icref;
 
@@ -130,8 +137,14 @@
 	register struct tet_testlist *tp;
 	register int icmin;
 
-	icmin = TET_MAX(tet_testlist[0].icref, 0);
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++)
+                                                                      
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
+	icmin = TET_MAX(tp[0].icref, 0);
+	for (;tp->testfunc != TET_NULLFP; tp++)
 		if (tp->icref >= 0 && tp->icref < icmin)
 			icmin = tp->icref;
 
@@ -148,7 +161,12 @@
 {
 	register struct tet_testlist *tp;
 
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++)
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
+	for (; tp->testfunc != TET_NULLFP; tp++)
 		if (tp->icref == icnum)
 			return(1);
 
@@ -169,7 +187,13 @@
 	register int tpcount;
 
 	tpcount = 0;
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++)
+
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
+	for (; tp->testfunc != TET_NULLFP; tp++)
 		if (tp->icref == icnum)
 			tpcount++;
 
@@ -190,7 +214,12 @@
 	register int testnum;
 
 	testnum = 0;
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++) {
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
+	for (;tp->testfunc != TET_NULLFP; tp++) {
 		testnum++;
 		if (tp->icref == icnum && --tpnum == 0)
 			return(testnum);
@@ -210,11 +239,16 @@
 {
 	register struct tet_testlist *tp;
 
-	for (tp = tet_testlist; tp->testfunc != TET_NULLFP; tp++)
+        if (test_start_flag == 1) {
+            tp = ptr_testlist;
+        } else {
+          tp = tet_testlist;
+        }
+	for (; tp->testfunc != TET_NULLFP; tp++)
 		if (tp->icref == icnum && --tpnum == 0) {
-			(*tp->testfunc)();
+			(*tp->testfunc)(tp->argc);
 			break;
-		}
+        }
 
 	return(0);
 }
diff -Naur src/tet3/demo/master/tetdist.cfg src/tet3/demo/master/tetdist.cfg
--- src/tet3/demo/master/tetdist.cfg	2006-03-10 15:12:17.000000000 +0530
+++ src/tet3/demo/master/tetdist.cfg	2007-09-28 15:52:14.000000000 +0530
@@ -10,8 +10,10 @@
 #	file for your installation
 #
 
-TET_REM001_TET_ROOT=/home/tet
+TET_REM001_TET_ROOT=/usr/local/tet/
 TET_REM001_TET_TSROOT=${TET_ROOT}/demo
+TET_REM002_TET_ROOT=/usr/local/tet/
+TET_REM002_TET_TSROOT=${TET_ROOT}/demo
 
 # The following variables are referenced only by XTI-based versions of
 # TETware - you should not define them if you built TETware to use the socket
diff -Naur src/tet3/demo/master/tet_scen src/tet3/demo/master/tet_scen
--- src/tet3/demo/master/tet_scen	2006-03-10 15:12:17.000000000 +0530
+++ src/tet3/demo/master/tet_scen	2007-09-28 15:51:54.000000000 +0530
@@ -5,10 +5,24 @@
 #
 all
 	"starting scenario"
-	:remote,000,001:
-	/ts/tc1
-	/ts/tc2
-	"next is the last test case"
-	/ts/tc3
-	:endremote:
+        :parallel:
+	    :remote,000:
+	        /ts/tc1
+	        /ts/tc2
+	        "next is the last test case"
+	        /ts/tc3
+	    :endremote:
+	    :remote,001:
+	        ../slave_1/ts/tc1
+	        ../slave_1/ts/tc2
+	        "next is the last test case"
+	        ../slave_1/ts/tc3
+	    :endremote:
+	    :remote,002:
+	        ../slave_2/ts/tc1
+	        ../slave_2/ts/tc2
+	        "next is the last test case"
+	        ../slave_2/ts/tc3
+	    :endremote:
+	:endparallel:
 	"done"
diff -Naur src/tet3/demo/systems src/tet3/demo/systems
--- src/tet3/demo/systems	2006-03-10 15:12:17.000000000 +0530
+++ src/tet3/demo/systems	2007-09-28 15:52:33.000000000 +0530
@@ -8,5 +8,6 @@
 #	how to customise this file for your installation.
 #
 000     master
-001     slave
+001     slave_1
+002     slave_2
 
diff -Naur src/tet3/tcm/tcm_main.c src/tet3/tcm/tcm_main.c
--- src/tet3/tcm/tcm_main.c	2006-03-10 15:12:22.000000000 +0530
+++ src/tet3/tcm/tcm_main.c	2007-09-28 15:48:34.000000000 +0530
@@ -271,8 +271,54 @@
    static void sigterm PROTOLIST((void));
    static void setsigs PROTOLIST((void (*) PROTOLIST((int))));
 
+struct tet_testlist *ptr_testlist;
+int test_start_flag=0;
 
 static	char	buf[256];
+void tet_test_start(int group,struct tet_testlist test_arry[]) 
+{
+        int icmin,icmax;
+	int iccount, tpcount, icnum, rc;
+#ifndef TET_LITE	/* -START-LITE-CUT- */
+	int nsys;
+#endif			/* -END-LITE-CUT- */
+        if (test_arry != NULL) {
+           test_start_flag=1;
+           ptr_testlist=test_arry;
+        }
+   if (group == -1) {
+
+   icmin = tet_getminic();
+   icmax = tet_getmaxic();
+
+   for(icnum=icmin;icnum<=icmax;icnum++)
+   if (tet_isdefic(icnum)) {
+      tpcount = tet_gettpcount(icnum);
+      rc=tet_icstart(icnum,tpcount); 
+      ASSERT_LITE(rc == 0);
+      if (rc < 0)
+         tet_docleanup(EXIT_FAILURE);
+         tpcount = call_tps(icnum,tpcount);
+         tet_icend(icnum,tpcount);
+      }
+   } else {
+      
+      tpcount=tet_gettpcount(group);
+      rc=tet_icstart(group,tpcount); 
+      ASSERT_LITE(rc == 0);
+      if (rc < 0)
+         tet_docleanup(EXIT_FAILURE);
+      tpcount = call_tps(group,tpcount);
+      tet_icend(group,tpcount);
+   }
+
+       test_start_flag=0;
+       tet_thistest=0;
+}
+
+void tet_test_cleanup() {
+	tet_docleanup(EXIT_SUCCESS); 
+}
 
 /* ARGSUSED */
 #ifdef PROTOTYPES
